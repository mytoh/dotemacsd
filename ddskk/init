;;; -*- mode: emacs-lisp;lexical-binding: t -*-

;;; ddskk init

;;;; large dict
;; (setq skk-large-jisyo (expand-file-name "ddskk/dic/SKK-JISYO.L"
;;                                         user-emacs-directory))
(setq skk-large-jisyo (cons
                       (locate-user-emacs-file "ddskk/dic/npiiii4skk/npiiii.l.euc")
                       'euc))
;; (setq skk-large-jisyo "/usr/local/share/skk/SKK-JISYO.L")
;;;;; cdb
(setq skk-cdb-large-jisyo "/usr/local/share/skk/SKK-JISYO.L.cdb")

;;;; use act for dvorak
(setq skk-use-act t)

;;;; 動的候補表示
(setq skk-dcomp-activate t)

;;;; 英単語補完
(setq skk-use-look t)
(setq skk-look-recursive-search t)

;;;; 変換時に注釈 (annotation) を表示する
(setq skk-show-annotation t)

;;;; 変換候補一覧と注釈 (annotation) を GUI ぽく表示する
(setq skk-show-tooltip t)

;;;; Enter キーを押したときには確定する
(setq skk-egg-like-newline t)

;;;; 動的補完で候補を複数表示する
(setq skk-dcomp-multiple-activate t)

;;;; icon
(setq skk-show-icon t)

;;;; show input mode
(setq skk-show-mode-show t)

;;;; face
(defface muki:skk-tooltip
  '((t (:foreground "#93b8bb"
        :background "#232323"
        :bold nil)))
  "face for skk tooltip"
  :group 'skk-tooltip)
(setq skk-tooltip-face 'muki:skk-tooltip)

;;;; か行をcで入れるときに辞書の送りがなをちゃんとする。
;; (setq skk-okuri-char-alist '((\"c\" . \"k\")))

(cl-defun muki:skk-dic-path (path)
  (expand-file-name
   path
   (locate-user-emacs-file "ddskk/dic")))

(defun muki:add-skk-jisyo (dicts)
  (cl-letf ((dict-directory (locate-user-emacs-file "ddskk/dic")))
    (seq-each
     (lambda (d)
       (cl-letf ((elem (if (listp d)
                           (cons (expand-file-name (car d) dict-directory)
                                 (cdr d))
                         (expand-file-name d dict-directory))))
         (when (file-exists-p (if (listp elem) (car elem) elem))
           (cl-pushnew elem skk-extra-jisyo-file-list))))
     dicts)))

(muki:add-skk-jisyo
 '(
   ("SKK-JISYO.itaiji" . euc-jp)
   ("SKK-JISYO.assoc" . euc-jp)
   ("SKK-JISYO.edict" . euc-jp)
   ;;    ;; ("SKK-JISYO.emoji.utf8" . utf8)
   ("SKK-JISYO.fullname" . euc-jp)
   ("SKK-JISYO.geo" . euc-jp)
   ("SKK-JISYO.jinmei" . euc-jp)
   ("SKK-JISYO.law" . euc-jp)
   ("SKK-JISYO.okinawa" . euc-jp)
   ("SKK-JISYO.propernoun" . euc-jp)
   ;;    ;; "SKK-JISYO.station"
   ))

;; (muki:add-skk-jisyo
;;  '("SKK-JISYO.jinmei"
;;    "SKK-JISYO.itaiji"
;;    "SKK-JISYO.itaiji.JIS3_4"
;;    ;; "SKK-JISYO.emoji.utf8"
;;    ))

;;;; itaiji
(setq skk-itaiji-jisyo (muki:skk-dic-path "SKK-JISYO.itaiji"))

;;;; utf-8
;; this line should put on last
(setq skk-jisyo-code 'utf-8)

;;;; github emoji

;; o 補完
(cl-letf ((jisyo-path (expand-file-name
                       "github.com/tkita/SKK-JISYO/SKK-JISYO.GitHub-emojis"
                       hoarder-directory)))
  (setq skk-extra-jisyo-file-list
        (cons `(,jisyo-path . utf-8)
              skk-extra-jisyo-file-list))
  ;; o 変換
  (setq skk-completion-prog-list
        (cons `(skk-comp-from-jisyo '(,jisyo-path . utf-8))
              skk-completion-prog-list)))
