## -*- mode: eshell-script -*-

(or (getenv "CDPATH")
    (setenv "CDPATH"
            (cl-reduce
             '(lambda (a b)
                (cl-concatenate 'string
                                (expand-file-name a) ":" (expand-file-name b)))
             '("~/huone" "~"  "/usr/local"))))

(setenv "PAGER" "cat")

## 補完時に大文字小文字を区別しない
(setq eshell-cmpl-ignore-case t)
## 確認なしでヒストリ保存
(setq eshell-ask-to-save-history (quote always))
## 補完時にサイクルする
(setq eshell-cmpl-cycle-completions t)
## 補完候補がこの数値以下だとサイクルせずに候補表示
(setq eshell-cmpl-cycle-cutoff-length 5)
## 履歴で重複を無視する
(setq eshell-hist-ignoredups t)

## scroll to the bottom
(setq eshell-scroll-to-bottom-on-output t)
(setq eshell-scroll-show-maximum-output t)

## history
(setq eshell-history-size 10000)

## run ls after cd
(setq eshell-list-files-after-cd t)

## helm
(define-key eshell-mode-map
  (kbd "M-h") 'helm-eshell-history)

## helm complete
(define-key eshell-mode-map
  [remap eshell-pcomplete]  'helm-esh-pcomplete)

(define-key eshell-mode-map (kbd "C-p") 'eshell-previous-matching-input-from-input)
(define-key eshell-mode-map (kbd "C-n") 'eshell-next-matching-input-from-input)
# (define-key eshell-mode-map (kbd "C-r") #'eshell-previous-matching-input-from-input)

(add-to-list 'eshell-visual-commands "ssh")
(add-to-list 'eshell-visual-commands "tail")
(add-to-list 'eshell-command-completions-alist
             `("unarchive.sh" . ,(concat (regexp-opt '(".tar" ".tgz" ".tar.gz" ".txz" ".tar.xz" ".cbz" ".cbr" ".cbx"
                                                       ".rar" ".zip"))
                                         "\\'")))

(add-to-list 'eshell-output-filter-functions 'eshell-handle-ansi-color)
(add-to-list 'eshell-output-filter-functions 'eshell-truncate-buffer)
(add-to-list 'eshell-output-filter-functions 'eshell-postoutput-scroll-to-bottom)

## ls colors
(set-face-attribute 'eshell-ls-directory nil  :foreground "#83a598")
(set-face-attribute 'eshell-ls-symlink   nil :foreground "#8ec07c")
(set-face-attribute 'eshell-ls-executable nil :foreground "#b8bb26")
(set-face-attribute 'eshell-ls-readonly  nil :foreground "#d3869b")
(set-face-attribute 'eshell-ls-unreadable nil :foreground "#665c54")
(set-face-attribute 'eshell-ls-special   nil :foreground "#fe8019")
(set-face-attribute 'eshell-ls-missing   nil :foreground "#fb4934")

(defun pcomplete/sudo ()
  (let ((prec (pcomplete-arg 'last -1)))
    (cond ((string= "sudo" prec)
           (while (pcomplete-here*
                   (funcall pcomplete-command-completion-function)
                   (pcomplete-arg 'last) t))))))

(defun pcomplete/please ()
  (let ((prec (pcomplete-arg 'last -1)))
    (cond ((string= "please" prec)
           (while (pcomplete-here*
                   (funcall pcomplete-command-completion-function)
                   (pcomplete-arg 'last) t))))))
